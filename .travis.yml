language: node_js
node_js:
  - 8
branches:
  only:
  - master
env:
  global:
    - "BAT_ADS_PAYOUT_ADDRESS=fb599883-c30c-4428-91be-ba901e69a0b2"
    - "BAT_BALANCE_SERVER=http://localhost:3003"
    - "BAT_EYESHADE_SERVER=http://localhost:3002"
    - "BAT_GRANT_REDIS_URL=redis://localhost:3013"
    - "BAT_GRANT_SERVER=http://localhost:3333"
    - "BAT_LEDGER_SERVER=http://localhost:3001"
    - "BAT_MONGODB_URI=mongodb://localhost:3010"
    - "BAT_POSTGRES_URL=postgres://eyeshade:password@localhost:3012/eyeshade"
    - "BAT_RATIOS_URL=https://ratios-staging.mercury.basicattentiontoken.org"
    - "BAT_REDIS_URL=redis://localhost:3011"
    - "BAT_SETTLEMENT_ADDRESS=6654ecb0-6079-4f6c-ba58-791cc890a561"
    - "DEBUG=*,-babel,-eslint:*,-mongo:*,mongo:queries"
    - "ENABLE_ADS_PAYOUT=1"
    - "FASTLY_TOKEN_LIST=foobarfoobar"
    - "FREEZE_SURVEYORS_AGE_DAYS=7"
    - "GRANT_SIGNATOR_PUBLIC_KEY=bbe028009e744422bfc39b0e226633324d8c5fe0744c87c1018b88a488bc5899"
    - "GRANT_WALLET_CARD_ID=f042845f-fa62-4022-8117-a476ec583a7b"
    - "NODE_ENV=development"
    - "NODE_PATH=."
    - "CAPTCHA_URL=https://bat-captcha-staging.herokuapp.com"
    - "ALLOWED_ADS_TOKENS=foobarfoobar"
    - "ALLOWED_PUBLISHERS_TOKENS=foobarfoobar"
    - "REDEEMER_TOKEN=foobarfoobar"
    - "TESTING_COHORTS=test"
    - "TOKEN_LIST=foobarfoobar"
    - "UPHOLD_DONOR_CARD_ID=6654ecb0-6079-4f6c-ba58-791cc890a561"
    - "WALLET_COOLDOWN_BYPASS_TOKEN=fb9dcd45-36f5-4c2d-b511-90fa1f0cadae"
    - "WALLET_COOLDOWN_HRS=24"
    - "VOTING_COHORTS=control,grant,test,ads,safetynet"
    - secure: "JQ9WipBrcCPtXFwv/fmzhv8LPz/tx/jCPpeTK0KmSZr4Yqs5kMG0YGH3QeT1YDpiRakW9X5us9tsnsfHuslvZ8Z565lc0wIK7b7CUcEzVuBts6cfVQtOpqKKYjw6jyq5TraTYawYGUfeaCkP+35oM/1fs4vPy6MbH5Plzg6f9iMfB+BFysRT20JYKXcW0LfihHRKStaAJYKDD2mpdY4kStu7vYB66LgR6Solw1IUwgJzfKst/dM6PJspfmNkFaHCoBNMEYcUJmeJPqmLCnfIA+eRCrSMfHOChjzCV6JbmcD11FOydISEhdt67X+5TDArePYVssrj7NygVlrn8TOvk6InXuul6n+oIpS0vz5e5QdxrReLLwb+WJPK7xKWD56Ko2gfTwtEUdevLzQhKfPMs5wW5ujjlcjAqi5PmC87Q+bxCjet19EdJ4j09y2NSKRo1LMzu1WIM6o1mIatha0vJEHa05XAUsuD9lCGrt/aG4DLYh5Q5gJP/SYDoMl+wJku254KJN+WesxaSREhgdqtV13GFnMofI9r/vq4wKrlcbsMh3UD337NZlNVZzONINeJ4afN3TRK+LS8bHGsss/ZpLcnfT0uYMXzneQQhkKmKWkss8VOLEZ2ccLRG0LNWsOJXznBE/SqXaxSK4NkgXQDyfVUuAj7GPyIDX6hygsguyA="
    - secure: "be8ASUNkGT1MpO/wfwVQKuo0Absf5xQAnjXRmsrM105n+vGXdq1c/fl13wow7d/PQtR27tNlJ5UmoeROUCBLlOKm+bWWZ7wFThsxOQtHk3yJoaVtIApo5cwEQcMi/92zWQKDwO7ZuK+xY9oLiYng2yayfuxBUEzWlNxS0cMsmq6Xnf1qG8USVCqvo8gQp/X8hliscFWRbCJ+lzggmlIsoTe6RElF9N3yXngvWRJY/GDjOe3FD2wJNDoE8wYwHcxKvfcdL0c8dWhHl5KC366ZSiBMJHrwv2aVjUgwQ2Azsdehxy1bsqyiH2bS/ifH8FUosjMA/g8qRB89EgaLCS5NndIVl1q0miuRv20kMaF6syTOH3HyDi/o2L9tg1Z/XSuNSVI2o+A8yJfKiY1AwjCR8aQ+uyKj9kOg7nTlBElHrOcAOaiC0Rg13TZ2230IbFanQFIqDL0B8xQx1EAxsArgWIrebqSd1QbVYKEHE5+2dWXExPX+7e217rFvEz5Ltxq1U9IdHHnmcTxUrylr800ub2PtOyZvRNbBFXq5tDpENLl/lV8yf0Qm2q+8jUvqXZIG0akIqC5b0cpHEtxJcAGvfqFx8vZUV1WW4TVbxApmndSGFw2bF6psx6SJUDrdFfl87u1Rb7wWtesDXAMrfIphlr0AcH2P7XDqxAjifuQgtdk="
    - secure: "I9ELp+dcTBczYT/XHh7eRVKC2ikkJv+yFCGJE3pLsZaW6aSkDt7KgaX3Rivrlt1pqHL53Cmv0F9qfyQR9PNl1zu7XdBiHcOSbLYI1bwnDlNve2opJoGipECuMbp9r6+GOxgnX5mQivJ5ZxTlhboHStBBxD1lLOriUTOMNfpEckJmaZ5nxedTUdmdEnXRCTZpHgsB345NVXAmEePp8L+KXWnhWYVnhCVmwdxq3xl9p/9ZaP6E3AF7syemWIKbSCCPDS/tJrysNouuJ9YlX0oi+rcl/GPgCdouBu/94orqAzVAFdfNX1taooRtNOgvkpIp7Q2mS3xphRSj+ZEijwnNwuIbNososVhvRRvNiFtumQG7Oe/TuYjUHo0I4Y2ZfKH+UB3Gw3CrnLSbyCKxglHEzFU8TWO1tsm/mj/qvvPw6cgUVpZUkDnAS28wTfzu3RxryYjn4Jg02eHlg4RIKCIJmBuldEyJtlO+XyzZajf+XenU2MxulVlk8dU3goQ7xM7uuVy1DAT3npPa8eHGwCD5Kd4vEuCTgPA55cwI/zKTlaskZKq1kmes2AN+9PStJEpt7u6ITD1+zsS7Ot82gmK2NKgA1tm6r7WtLnLL1SgflNxuGFeJVQN0Ix2KEZhma5xGkv1S433aiBV0xiiaLzzpVHaD+d3TdNCM2oaIL6v1LZM="
    - secure: "Flt+fCZMubcyqCbKntaPvmxyJ2gix8wCIcBa0yE82lQ3lzXgmOZLE1x7V0HssCnuXsLe7CA4wrqKk7aMpNcNpzhgghroZZ1K3zKf2DXg8T0GJqombMrHpoHUzTEIK9iojXYBvkaVqK/vYLbrel2dkJDWER0dUP00wwAgTCTm+W6IzTDUGDaah31Xann+gFbu++1L8zdDQNXW2XOmpuLQ141/NV1vZBuAi7I6ORf43vOLziIl443s+DepcODXQMawX/HMzwMuMS1RQcxAkIt9EKF0E5UpEqoJdD1KY5/5v3OzPi7w8e/D/wdGvIwXTwLPR6ZgLexNdEgr/B36CLc22RSJOa3IMrDjoETRGbVO0gCLuDeYgwWAoYpp6DMqP5DGoZlcssuhkd8Q5OPpK3tD1kHwJwB0SSGmCJ/c2KlSjxoKQs9tdq3900bu8ETHOfR7vyR+qmZTj2lHRpRLwsaN7KqnQzWAJu2qs5m5/AJYHeDATFy+VCQh/gvg1mrToWVxKS+gWQfXdfTm/UK+zE3fJTMD7qkp6l7QNbhTQNVLFJlty1W/Bx65KEgVs8WzlM/nWRaYlln/lu8vbZAZdmGrpjQzkcqy8oT4d3u0ZVoDNEu0F/wY0PBxw2DIqi3TZTThbGYz7T1oBeBONEBr5XBIRFmaMuNVamxPzKJiSoiFKu4="
    - secure: "vFqXh+FeAYsgtSyvEozHOcQgTdqxZpHFZ+AUH9JYe1X5cYWI+Yi4vhfL+BGirDLufuGyx6xfMTuacB3fNt6wl4oMdH8UJ/Kj7FYtNFeiWL7F81w9ux7HvQo1KA6YQb+O4xKfjUgRbSdvpVIWBpmSBdZMHc7l3e9eLGUzh5Xkr/KAFeg3FT+9/VVHvVmir0mmPxzw8dbk3PcK6lSb6aY4Q9shIVLST46v2MilduYIxIjzSq7MhrwZkek8RSarWrXIX614UDBhYYh/UbfuzGtobovLSqjgO5JdskTWHagE/MER0fmB2s7BE57OfH6wgRaFeUy6YrLtDl2BkYRWXxHGCALnuJcDQfKEdPRayIzLOAsSXMbTI5gxj/6izzkRyTaomi2wjk0ZZxJIZYmnK5IKG3an6SlCTb2HnlT8tAlJRvh9c+Kh1TQY4hzmJUj74pmCe4gxkCRuOi75gAT8eJIfZO/jTuDxXb7MumHowOZOOberBOQXVkffWdsE8bv7AaMhTRTqYmv751HmMBj++m33nP4Ex7Zvm9lZrcPyw7M1IMVTvVn4dNI/a2oUxkvUJvn/BM2YSnl6ez2GFyi/lPErlfs651DmU2juOcznISP06G0wXWC2TWB+5YGlv11ST7VKUlp2FtG7mUNlU3ptpZxThf9EB5wT5jYuL4YRa0NzfhY="
    - secure: "RmguZ8icDfLYIhPka3bCgAW+w7WoGhNiZRZmSkSo/gDZstSwMHGe/Vsoxfx0gyYZLkgB1PHS/8ZVtopxeXMdI7PDeeidpzQ+aM9nlK4LNktvGORlBSIaXBcZM+lFHEfOThMO969rT2xmIntuVd+bzaXa29ayG83x7vuREl7/VdSI/qdBKL0jldshwAXRU+3I5EgF/KK/r4Wi322Lh7/6BWGWN8OISAhv+IszfvfdDtCd71EzhJ+O78dOiDsdfVif0nQrGwQ6QgnGwxa4RlHnseUBnTVl9Uh/mS2PreZRb0SnJ3Tybsq1ZGG0zop1zyI0epc4b96pi9s4LmyQ3HeMP6fGfDmf7VJTRWJXAk+Jidh/dT89668IMnbvEu+cRTnyM8Q/ZsAtlZy61jRJLRqPw/KE/959mmTew2CMZDmF+RtisxMqFhGV/CV8WtWcm3D17uw1Ug89BddB1zB7ZVCACsi4OxX5DGPhoLHDM+gS6QhBms2mNBdybHuDrOlGLwFrZKTos+a78A4L5eCjqxjDHdcGoZKq/M+sxa5bCH44A3mQINT1jzGR5C2/suJR62sknIrdxp1gqimsf4C0iCuoU/Q4aU03/0O81PqrmGnJJY5Z0Q5EENQ/qLeAlXGMSfBVfEycYO9X24dZX586fjzFCW2ZeWlfDEA8uxGW/1a3sqg="
    - secure: "st0na2ROPCCPgacRZKE+4qIzZdjDnCDkbL2rzbKMuWYuonVTQzyTMb9LxtBubmwcwyhah75gP6PFd0VKEb6Rrfn/zS0N8hmdkpCYLdF2g4QZZpqAe+kx1eRk42BHqh+rMxlIES1RX9m53d3vnS+EO9bE0iz96dSWUn4CfzXJqWNx5bew7HJX6AZy0o8O6piROxQm4ofdIglYMnyOrawRlb6H28A7bY8f2Icnuy8nUn7H0IeJDvOYSybpvUuHy1dlM3s5TVK+WhXqN6MAXyT7T9nE5DgM9rLmWlGEtv9wF/xplxZ3xQpqhFEz97lMKbfqnFd6RBqx1lAZ/I0qtftUs4vYZgpj2q+Qlx5H1c6XpqwwGjFNGqIwKvNwrmIvwgc1/20Y6o+Z9NlCygF+9/NtDzAyFex5fWWbSx4tNHFZ58FPuGbaV++UgjzZUAgk59nOzHRPIdU5mo/atagdmN1I6berMc2aa+oW8rtqXJbYK3FGiFgLjJwefRxR42luAuUMZEhmxv5Iob0al3e34B0ZdaE/Qg/Tqi1pJDfJD6R4nidkbJcfBljyULhqKpURgaJW2bCb5uyw0R559pULFT9cJAIOR/A+Ow6lgNCdIB5+fVp2WqV5FtIjprTeRVPQXssVem0NVpSqdLuBC1VslF+bc6PDQ9uadtOVzsiJiBRw8k0="
    # CAPTCHA_TOKEN
    - secure: "MB6E+i2a/Oey1+X5iIbjJbLRcV2n4EiGe7+dLuJkV/+fiRRJxMIToIWbp7ex01+lqgUbSig12l30Gow7XOEC4SbzubPaFzj2XzYJzV2JFYZbKb9yqnUkHhZ6Ye2DTDKHlS2issxdXDvFjxEK2Y86k0HwNEKEWVttr22zKnxISFCccpxLpxEQmXGyAdWaadHorCrtAPNFDhq2VfaseiHKD3g8yf+xe08biuf18q//THavZFfpeNUnxf3boTjPxykRYdu+s3kGD0Zv3DHsV3+qaq9+fNv4ZMgE7kT/yZMpfq/KXsKryJLj12RlhXFcfkC1uKsAmMFK20BO11LHUSzl6jhkV1i5wIuNyL7yD5mvJ6OqEUlUUvlWSgSW4sk4KwG7aBn1ZY/XBFuoFmHrB9awHrPxdLe4ybt0KHljay1xhA1hxl1xG/BCAJZXtPN0D9y194ReFXkTVe7LiBgW7ZO3fh8ytCT43mmlQLEXNAft1dMY5gkZx7cuPaXr5msqPLMBg3MCbKyebqSg6z5UASjHxYYPu2Vn0V0MOjeMXi4Zo9/IoN4L/PjYd4OXJtVy9wuXxjbedt7YcWZHFi9OFpyrnuqfwavGw/V4mJuE7EFChA2aYejmKyMCCIzPr4pzxhZPhiQ6wWxDGL+u8Q2NJGIfrmM3wwdGAvw6bGOaLBkSxbY="
    - secure: "axkgQBezsqtESMM5eeblaBJuRAuNHoXpW9b44hjf/rt6DPigLOTMn2tnxq+mTbcSpu5m4j1cS09/uwXPJJgcSf4amLSqZuFtbidUUz4cPzkP55C2HNHUJn4FLbxZrRfIGMTi4t9J0cHQrgG3zZaqQgWBUe5b91QqkXSOwkwSfbeCp93DAau7O+oVIjrd9r+/GtXPmwRHaJIQz1oQWieRi/Xl3xafwsLClLhOYhd19sQNK/nFoHVV9/wckqS6F71NufuHwUBVKmKV6mD1V4E51MB6x4f455igLtt53DspLn0u1v63zqeF3tqukg5QPNeV5Qkgawg3pqsWD6auUm+GNmUMnC4J2NzA986e/O0ROF4hQksmSc5yPq6RLmelu8OIFyMUHiUIg3MJDlhLS1akNFXs2OxbCcLr9jrRc4GO6zBJAz3YVzOnbE4hx7ujyD/+O6nC4AJFAsuR4xz031JVlnrB0nFoup9QohwiZG4KnE5P3PduECKaiL/OMNejh+2iTwpXAjJtWRAMWjA9kpQz4UpkWw90Hiua53U3GjIfefYzcJYk26W/frS7HpQsSfghnlG1HfqrOukpiqGUOyMRmg3VqeDfU2hImd2XvEvnV5COm7PyU6EcrtsjmKGMOEyWdDpkq+pDemb/rCf7pYc27/uPVUZ1cvKVEvMv6zLkGss="
services:
  - docker
cache:
  directories:
  - $HOME/.npm
before_install:
  - npm i --global npm@5.10.0
  - npm --version
install:
- npm ci
sudo: required
before_script:
  # lint the files (fail early)
  - npm run security
  # pull the bat go layer
  - docker pull brave/bat-go:latest
  # build the docker compose file
  - npm run docker-build
  - docker-compose up -d eyeshade-postgres
  - sleep 3
  - npm run docker-migrate-up
  # bring up the relevant services
  - npm run docker-up-detached
  # let the detached up command start up
  - sleep 20
after_failure:
  - npm run docker-log-detached
after_script:
  - npm run docker-migrate-down-all

after_success:
  - npm run coverage
  - npx codecov --file=./coverage/lcov.info
