version: "2.1"

networks:
  ledger:
    driver: bridge

services:
  mongo:
    container_name: ledger-mongo
    image: mongo:3.6.7
    ports:
      - "3010:27017"
    networks:
      - ledger
  redis:
    container_name: ledger-redis
    image: redis:latest
    ports:
      - "3011:6379"
    networks:
      - ledger
  eyeshade-postgres:
    container_name: eyeshade-postgres
    image: postgres:10.4
    ports:
      - "3012:5432"
    networks:
      - ledger
    environment:
      - "POSTGRES_USER=eyeshade"
      - "POSTGRES_PASSWORD=password"
  eyeshade-worker:
    container_name: eyeshade-worker
    command: "npm run eyeshade-worker"
    extends:
      file: base.yml
      service: ledger
    environment:
      - "DATABASE_URL=postgres://eyeshade:password@eyeshade-postgres/eyeshade"
      - "MONGODB_URI=mongodb://mongo/eyeshade"
      - "SERVICE=eyeshade"
      - "DYNO=worker.1"
    depends_on:
      - mongo
      - redis
      - eyeshade-postgres
    networks:
      - ledger
  eyeshade-web:
    container_name: eyeshade-web
    ports:
      - "3002:3002"
    command: "npm run eyeshade-server"
    extends:
      file: base.yml
      service: ledger
    environment:
      - "DATABASE_URL=postgres://eyeshade:password@eyeshade-postgres/eyeshade"
      - "MONGODB_URI=mongodb://mongo/eyeshade"
      - "SERVICE=eyeshade"
      - "DYNO=web.1"
    depends_on:
      - mongo
      - redis
      - eyeshade-postgres
    networks:
      - ledger
  ledger-worker:
    container_name: ledger-worker
    command: "npm run ledger-worker"
    extends:
      file: base.yml
      service: ledger
    environment:
      - "SERVICE=ledger"
      - "DYNO=worker.1"
      - "MONGODB_URI=mongodb://mongo/ledger"
    depends_on:
      - mongo
      - redis
    networks:
      - ledger
  ledger-web:
    container_name: ledger-web
    ports:
      - "3001:3001"
    command: "npm run ledger-server"
    extends:
      file: base.yml
      service: ledger
    environment:
      - "SERVICE=ledger"
      - "MONGODB_URI=mongodb://mongo/ledger"
      - PUBLISHERS_TAKEOVER
      - "DYNO=web.1"
    depends_on:
      - mongo
      - redis
    networks:
      - ledger
  balance-web:
    container_name: balance-web
    ports:
      - "3003:3003"
    command: "npm run balance-server"
    extends:
      file: base.yml
      service: ledger
    environment:
      - "SERVICE=balance"
      - "DYNO=web.1"
    depends_on:
      - redis
    networks:
      - ledger
  grant-redis:
    container_name: grant-redis
    ports:
      - "3013:6379"
    image: redis:latest
    networks:
      - ledger
  grant-web:
    container_name: grant-web
    image: brave/bat-go:latest
    ports:
      - "3333:3333"
    environment:
      - "REDIS_URL=redis://grant-redis:6379"
      - BAT_SETTLEMENT_ADDRESS
      - GRANT_SIGNATOR_PUBLIC_KEY
      - GRANT_WALLET_CARD_ID
      - GRANT_WALLET_PRIVATE_KEY
      - GRANT_WALLET_PUBLIC_KEY
      - TOKEN_LIST
      - UPHOLD_ACCESS_TOKEN
    depends_on:
      - mongo
      - grant-redis
    networks:
      - ledger


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    ports:
      - "9090:9090"
    networks:
      - ledger

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    expose:
      - 3000
    ports:
      - 3000:3000
    volumes:
      # - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    container_name: grafana
    restart: unless-stopped
    networks:
      - ledger
    environment:
      - "GF_SECURITY_ADMIN_USER=admin"
      - "GF_SECURITY_ADMIN_PASSWORD=admin"
      - "GF_USERS_ALLOW_SIGN_UP=false"
      - "GF_INSTALL_PLUGINS=grafana-worldmap-panel"
